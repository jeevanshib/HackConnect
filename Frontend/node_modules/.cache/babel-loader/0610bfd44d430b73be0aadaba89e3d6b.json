{"ast":null,"code":"/*! js-cookie v3.0.5 | MIT */\n\n/* eslint-disable no-var */\nfunction assign(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\n\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init(converter, defaultAttributes) {\n  function set(name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);\n    var stringifiedAttributes = '';\n\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue;\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue;\n      } // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n\n\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return document.cookie = name + '=' + converter.write(value, name) + stringifiedAttributes;\n  }\n\n  function get(name) {\n    if (typeof document === 'undefined' || arguments.length && !name) {\n      return;\n    } // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n\n\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break;\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar;\n  }\n\n  return Object.create({\n    set,\n    get,\n    remove: function (name, attributes) {\n      set(name, '', assign({}, attributes, {\n        expires: -1\n      }));\n    },\n    withAttributes: function (attributes) {\n      return init(this.converter, assign({}, this.attributes, attributes));\n    },\n    withConverter: function (converter) {\n      return init(assign({}, this.converter, converter), this.attributes);\n    }\n  }, {\n    attributes: {\n      value: Object.freeze(defaultAttributes)\n    },\n    converter: {\n      value: Object.freeze(converter)\n    }\n  });\n}\n\nvar api = init(defaultConverter, {\n  path: '/'\n});\n/* eslint-enable no-var */\n\nexport { api as default };","map":{"version":3,"sources":["/Users/jeevanshibansal/Desktop/HackConnect/Frontend/node_modules/js-cookie/dist/js.cookie.mjs"],"names":["assign","target","i","arguments","length","source","key","defaultConverter","read","value","slice","replace","decodeURIComponent","write","encodeURIComponent","init","converter","defaultAttributes","set","name","attributes","document","expires","Date","now","toUTCString","escape","stringifiedAttributes","attributeName","split","cookie","get","cookies","jar","parts","join","found","e","Object","create","remove","withAttributes","withConverter","freeze","api","path","default"],"mappings":"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","sourcesContent":["/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jeevanshibansal/Desktop/HackConnect/Frontend/src/components/login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport LoginInput from '../../components/inputs/loginInput';\nimport * as Yup from 'yup';\nimport HashLoader from \"react-spinners/HashLoader\";\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport Cookie from 'js-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginInfos = {\n  email: \"\",\n  password: \"\"\n};\nexport default function LoginForm(_ref) {\n  _s();\n\n  let {\n    setVisible\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [login, setlogin] = useState(loginInfos);\n  const {\n    email,\n    password\n  } = login;\n  console.log(login);\n\n  const handleLoginChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setlogin({ ...login,\n      [name]: value\n    });\n  };\n\n  const loginValidation = Yup.object({\n    email: Yup.string().required(\"Email Address is Required\").email(\"Email is Invalid\").max(50, \"Email must be less than 50 characters\"),\n    password: Yup.string().required(\"Password is Required\")\n  });\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const loginSubmit = async () => {\n    try {} catch (error) {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[78vh] text-primary-color md:flex md:items-center md:max-w-[1000px] md:my-0 md:mx-auto md:py-0 md:px-[1rem]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[300px] mx-auto my-0 md:flex md:flex-col md:w-[50%] md:mb-[25vh]\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../../icons/facebook.svg\",\n        className: \"w-[400px] ml-[-1rem]\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-[17px] md:text-[20px]\",\n        children: \"HackConnect helps you connect and improve your skills with other developers.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center gap-[1rem] bg-primary shadow-[0_1px_2px] shadow-shadow-1 p-[1rem] pb-[2rem] w-[350px] my-[1rem] mx-auto h-fit select-none rounded-[10px] md:w-[400px]\",\n        children: [/*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: {\n            email,\n            password\n          },\n          validationSchema: loginValidation,\n          onSubmit: () => {\n            loginSubmit();\n          },\n          children: formik => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(LoginInput, {\n              type: \"text\",\n              name: \"email\",\n              placeholder: \"Email address or phone number\",\n              onChange: handleLoginChange,\n              bottom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              onChange: handleLoginChange,\n              bottom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-[100%] h-[50px] text-[17px] font-bold blue-btn\",\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/reset\",\n          className: \"text-blue-color cursor-pointer text-[14px] hover:underline\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[100%] h-[1px] bg-third\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setVisible(true),\n          className: \"important blue-btn w-[70%] h-[50px] text-[17px] font-semibold mt-[1rem] bg-green-color\",\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"text-[15px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Create A Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 48\n        }, this), \" for a hackathons, codeathons and contests.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"bj+BD8CCDwkKY5+BTevwYYrebJY=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/jeevanshibansal/Desktop/HackConnect/Frontend/src/components/login/LoginForm.js"],"names":["Formik","Form","Link","useState","LoginInput","Yup","HashLoader","axios","useDispatch","Cookie","useNavigate","loginInfos","email","password","LoginForm","setVisible","dispatch","navigate","login","setlogin","console","log","handleLoginChange","e","name","value","target","loginValidation","object","string","required","max","error","setError","loading","setLoading","loginSubmit","formik"],"mappings":"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","sourcesContent":["import {Formik, Form} from 'formik';\nimport {Link} from 'react-router-dom';\nimport {useState} from 'react';\nimport LoginInput from '../../components/inputs/loginInput';\nimport * as Yup from 'yup';\nimport HashLoader from \"react-spinners/HashLoader\";\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport Cookie from 'js-cookie';\nimport {useNavigate} from 'react-router-dom';\n\nconst loginInfos = {\n    email: \"\",\n    password: \"\",\n  }\n\nexport default function LoginForm({setVisible}) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n    const[login, setlogin]=useState(loginInfos);\n  const {email, password}=login;\n  console.log(login);\n  const handleLoginChange = (e) => {\n    const {name, value} = e.target;\n    setlogin({\n      ...login,\n      [name]: value,\n    })\n  }\n  const loginValidation = Yup.object({\n    email: Yup.string().required(\"Email Address is Required\")\n    .email(\"Email is Invalid\")\n    .max(50, \"Email must be less than 50 characters\"),\n    password: Yup.string().required(\"Password is Required\"),\n  })\n\n  const [error,setError] = useState(\"\");\n  const [loading,setLoading] = useState(false);\n  const loginSubmit = async () => {\n    try {\n      \n    } catch (error) {\n      setLoading(false);\n    }\n  }\n  return (\n    <div className=\"h-[78vh] text-primary-color md:flex md:items-center md:max-w-[1000px] md:my-0 md:mx-auto md:py-0 md:px-[1rem]\">\n        <div className=\"w-[300px] mx-auto my-0 md:flex md:flex-col md:w-[50%] md:mb-[25vh]\">\n          <img src=\"../../icons/facebook.svg\" className=\"w-[400px] ml-[-1rem]\" alt=\"\" />\n          <span className=\"text-[17px] md:text-[20px]\">\n          HackConnect helps you connect and improve your skills with other developers.\n          </span>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"flex flex-col items-center gap-[1rem] bg-primary shadow-[0_1px_2px] shadow-shadow-1 p-[1rem] pb-[2rem] w-[350px] my-[1rem] mx-auto h-fit select-none rounded-[10px] md:w-[400px]\">\n            <Formik \n            enableReinitialize\n            initialValues={{\n              email,\n              password,\n            }}\n            validationSchema={loginValidation}\n            onSubmit={()=>{\n              loginSubmit();\n            }}\n            >\n              {(formik) => (\n                <Form>\n                  <LoginInput \n                  type=\"text\" \n                  name=\"email\" \n                  placeholder=\"Email address or phone number\" \n                  onChange={handleLoginChange} \n                  bottom\n                  />\n                  <LoginInput \n                  type=\"password\" \n                  name=\"password\" \n                  placeholder=\"Password\" \n                  onChange={handleLoginChange} \n                  bottom />\n                  \n                  <button type=\"submit\" className=\"w-[100%] h-[50px] text-[17px] font-bold blue-btn\">Log In</button>\n                </Form>\n              )}\n            </Formik>\n            <Link to=\"/reset\" className=\"text-blue-color cursor-pointer text-[14px] hover:underline\">Forgot Password?</Link>\n            <div className=\"w-[100%] h-[1px] bg-third\"></div>\n            <button onClick={()=>setVisible(true)} className=\"important blue-btn w-[70%] h-[50px] text-[17px] font-semibold mt-[1rem] bg-green-color\">Create Account</button>\n          </div>\n          <Link to=\"/\" className=\"text-[15px]\"><b>Create A Page</b> for a hackathons, codeathons and contests.</Link>\n        </div>\n      </div>\n)\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jeevanshibansal/Desktop/HackConnect/Frontend/src/components/createPostPopup/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\"; // import Picker from 'emoji-picker-react'\n\nimport EmojiPickerBackground from \"./EmojiPickerBackground\";\nimport AddToYourPost from \"./AddToYourPost\";\nimport ImagePreview from \"./ImagePreview\"; // import useClickOutside from \"../../helpers/clickOutside\";\n// import { createPost } from \"../../functions/post\";\n// import PulseLoader from \"react-spinners/PulseLoader\";\n// import PostError from \"./PostError\";\n// import dataURItoBlob from \"../../helpers/dataURItoBlob\";\n// import { uploadImages } from \"../../functions/uploadImages\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePostPopup(_ref) {\n  _s();\n\n  let {\n    user,\n    setVisible\n  } = _ref;\n  const popup = useRef(null);\n  const [text, setText] = useState(\"\");\n  const [showPrev, setShowPrev] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [background, setBackground] = useState(\"\"); //   useClickOutside(popup, () => {\n  //     setVisible(false);\n  //   });\n  //   const postSubmit = async () => {\n  //     if (background) {\n  //       setLoading(true);\n  //       const response = await createPost(\n  //         null,\n  //         background,\n  //         text,\n  //         null,\n  //         user.id,\n  //         user.token\n  //       );\n  //       setLoading(false);\n  //       if (response === \"ok\") {\n  //         setBackground(\"\");\n  //         setText(\"\");\n  //         setVisible(false);\n  //       } else {\n  //         setError(response);\n  //       }\n  //     } else if (images && images.length) {\n  //       setLoading(true);\n  //       const postImages = images.map((img) => {\n  //         return dataURItoBlob(img);\n  //       });\n  //       const path = `${user.username}/post_images`;\n  //       let formData = new FormData();\n  //       formData.append(\"path\", path);\n  //       postImages.forEach((image) => {\n  //         formData.append(\"file\", image);\n  //       });\n  //       const response = await uploadImages(formData, path, user.token);\n  //       const res = await createPost(\n  //         null,\n  //         null,\n  //         text,\n  //         response,\n  //         user.id,\n  //         user.token\n  //       );\n  //       setLoading(false);\n  //       if (res === \"ok\") {\n  //         setText(\"\");\n  //         setImages(\"\");\n  //         setVisible(false);\n  //       } else {\n  //         setError(res);\n  //       }\n  //     } else if (text) {\n  //       setLoading(true);\n  //       const response = await createPost(\n  //         null,\n  //         null,\n  //         text,\n  //         null,\n  //         user.id,\n  //         user.token\n  //       );\n  //       setLoading(false);\n  //       if (response === \"ok\") {\n  //         setBackground(\"\");\n  //         setText(\"\");\n  //         setVisible(false);\n  //       } else {\n  //         setError(response);\n  //       }\n  //     } else {\n  //       console.log(\"nothing\");\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-blur fixed top-0 left-0 z-10 h-[100%] w-[100%]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%] bg-primary shadow-[0_12px_20px_0] shadow-shadow-1 min-h-[220px] w-[500px] rounded-[5px] postBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex items-center justify-center text-[20px] font-bold p-[14px_15px_17px_15px] border-b-[1px_solid] box_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"small_circle\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"exit_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-[12px] p-[17px_17px_5px_17px] box_profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.picture,\n          alt: \"\",\n          className: \"w-[40px] h-[40px] rounded-[50%] object-cover box_profile_img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"translate-y-[-7px] box_col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-[14px] font-semibold mb-[4px] box_profile_name\",\n            children: [user.first_name, \" \", user.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center w-[81px] gap-[4px] text-[12px] p-[3px_8px_4px_8px] rounded-[7px] bg-third cursor-pointer box_privacy\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"../../../icons/public.png\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mb-[1px]\",\n              children: \"Public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"arrowDown_icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), !showPrev ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(EmojiPickerBackground, {\n          text: text,\n          setText: setText,\n          user: user,\n          showPrev: showPrev,\n          background: background,\n          setBackground: setBackground\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(ImagePreview, {\n        text: text,\n        setText: setText,\n        user: user,\n        images: images,\n        setImages: setImages,\n        setShowPrev: setShowPrev,\n        setError: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddToYourPost, {\n        setShowPrev: setShowPrev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post_submit\" //   onClick={() => {\n        //     postSubmit();\n        //   }}\n        ,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePostPopup, \"MLNeCqIBpR34CQgcHcIdHr/O9gA=\");\n\n_c = CreatePostPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePostPopup\");","map":{"version":3,"sources":["/Users/jeevanshibansal/Desktop/HackConnect/Frontend/src/components/createPostPopup/index.js"],"names":["useEffect","useRef","useState","EmojiPickerBackground","AddToYourPost","ImagePreview","CreatePostPopup","user","setVisible","popup","text","setText","showPrev","setShowPrev","loading","setLoading","error","setError","images","setImages","background","setBackground","picture","first_name","last_name"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n// import Picker from 'emoji-picker-react'\nimport EmojiPickerBackground from \"./EmojiPickerBackground\";\nimport AddToYourPost from \"./AddToYourPost\";\nimport ImagePreview from \"./ImagePreview\";\n// import useClickOutside from \"../../helpers/clickOutside\";\n// import { createPost } from \"../../functions/post\";\n// import PulseLoader from \"react-spinners/PulseLoader\";\n// import PostError from \"./PostError\";\n// import dataURItoBlob from \"../../helpers/dataURItoBlob\";\n// import { uploadImages } from \"../../functions/uploadImages\";\n\nexport default function CreatePostPopup({ user, setVisible }) {\n  const popup = useRef(null);\n  const [text, setText] = useState(\"\");\n  const [showPrev, setShowPrev] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [background, setBackground] = useState(\"\");\n\n//   useClickOutside(popup, () => {\n//     setVisible(false);\n//   });\n\n//   const postSubmit = async () => {\n//     if (background) {\n//       setLoading(true);\n//       const response = await createPost(\n//         null,\n//         background,\n//         text,\n//         null,\n//         user.id,\n//         user.token\n//       );\n//       setLoading(false);\n//       if (response === \"ok\") {\n//         setBackground(\"\");\n//         setText(\"\");\n//         setVisible(false);\n//       } else {\n//         setError(response);\n//       }\n//     } else if (images && images.length) {\n//       setLoading(true);\n//       const postImages = images.map((img) => {\n//         return dataURItoBlob(img);\n//       });\n//       const path = `${user.username}/post_images`;\n//       let formData = new FormData();\n//       formData.append(\"path\", path);\n//       postImages.forEach((image) => {\n//         formData.append(\"file\", image);\n//       });\n//       const response = await uploadImages(formData, path, user.token);\n//       const res = await createPost(\n//         null,\n//         null,\n//         text,\n//         response,\n//         user.id,\n//         user.token\n//       );\n//       setLoading(false);\n//       if (res === \"ok\") {\n//         setText(\"\");\n//         setImages(\"\");\n//         setVisible(false);\n//       } else {\n//         setError(res);\n//       }\n//     } else if (text) {\n//       setLoading(true);\n//       const response = await createPost(\n//         null,\n//         null,\n//         text,\n//         null,\n//         user.id,\n//         user.token\n//       );\n//       setLoading(false);\n//       if (response === \"ok\") {\n//         setBackground(\"\");\n//         setText(\"\");\n//         setVisible(false);\n//       } else {\n//         setError(response);\n//       }\n//     } else {\n//       console.log(\"nothing\");\n//     }\n//   };\n  return (\n    <div className=\"bg-blur fixed top-0 left-0 z-10 h-[100%] w-[100%]\">\n        <div className=\"absolute top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%] bg-primary shadow-[0_12px_20px_0] shadow-shadow-1 min-h-[220px] w-[500px] rounded-[5px] postBox\">\n            <div className=\"relative flex items-center justify-center text-[20px] font-bold p-[14px_15px_17px_15px] border-b-[1px_solid] box_header\">\n                <div className=\"small_circle\">\n                    <i className=\"exit_icon\"></i>\n                </div>\n                <span>Create Post</span>\n            </div>\n            <div className=\"flex gap-[12px] p-[17px_17px_5px_17px] box_profile\">\n            <img\n            src={user.picture}\n            alt=\"\"\n            className=\"w-[40px] h-[40px] rounded-[50%] object-cover box_profile_img\"\n          />\n            <div className=\"translate-y-[-7px] box_col\">\n            <div className=\"text-[14px] font-semibold mb-[4px] box_profile_name\">\n              {user.first_name} {user.last_name}\n            </div>\n            <div className=\"flex items-center w-[81px] gap-[4px] text-[12px] p-[3px_8px_4px_8px] rounded-[7px] bg-third cursor-pointer box_privacy\">\n              <img src=\"../../../icons/public.png\" alt=\"\" />\n              <span className=\"mb-[1px]\">Public</span>\n              <i className=\"arrowDown_icon\"></i>\n            </div>\n            </div>\n            </div>\n            {!showPrev ? (\n          <>\n            <EmojiPickerBackground\n              text={text}\n              setText={setText}\n              user={user}\n              showPrev={showPrev}\n              background={background}\n              setBackground={setBackground}\n            />\n          </>\n        ):(\n            <ImagePreview\n            text={text}\n            setText={setText}\n            user={user}\n            images={images}\n            setImages={setImages}\n            setShowPrev={setShowPrev}\n            setError={setError}\n          />\n        )}\n        <AddToYourPost setShowPrev={setShowPrev} />\n        <button\n          className=\"post_submit\"\n        //   onClick={() => {\n        //     postSubmit();\n        //   }}\n          disabled={loading}\n        >\n          {/* {loading ? <PulseLoader color=\"#fff\" size={5} /> : \"Post\"} */}\n        </button>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}
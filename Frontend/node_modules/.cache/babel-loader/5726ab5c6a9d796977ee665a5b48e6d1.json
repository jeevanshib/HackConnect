{"ast":null,"code":"var _jsxFileName = \"/Users/jeevanshibansal/Desktop/HackConnect/Frontend/src/components/createPostPopup/EmojiPickerBackground.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport Picker from \"emoji-picker-react\"; // import useClickOutside from \"../../helpers/clickOutside\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmojiPickerBackground(_ref) {\n  _s();\n\n  let {\n    text,\n    user,\n    setText,\n    type2,\n    background,\n    setBackground\n  } = _ref;\n  const [picker, setPicker] = useState(false);\n  const [showBgs, setShowBgs] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState();\n  const textRef = useRef(null);\n  const bgRef = useRef(null);\n  const emoji = useRef(null);\n  useEffect(() => {\n    textRef.current.selectionEnd = cursorPosition;\n  }, [cursorPosition]);\n\n  const handleEmoji = _ref2 => {\n    let {\n      emoji\n    } = _ref2;\n    const ref = textRef.current;\n    ref.focus();\n    const start = text.substring(0, ref.selectionStart);\n    const end = text.substring(ref.selectionStart);\n    const newText = start + emoji + end;\n    setText(newText);\n    setCursorPosition(start.length + emoji.length);\n  };\n\n  const postBackgrounds = [\"../../../images/postBackgrounds/1.jpg\", \"../../../images/postBackgrounds/2.jpg\", \"../../../images/postBackgrounds/3.jpg\", \"../../../images/postBackgrounds/4.jpg\", \"../../../images/postBackgrounds/5.jpg\", \"../../../images/postBackgrounds/6.jpg\", \"../../../images/postBackgrounds/7.jpg\", \"../../../images/postBackgrounds/8.jpg\", \"../../../images/postBackgrounds/9.jpg\"];\n\n  const backgroundHandler = i => {\n    bgRef.current.style.backgroundImage = `url(${postBackgrounds[i]})`;\n    setBackground(postBackgrounds[i]);\n    bgRef.current.classList.add(\"bgHandler\");\n  };\n\n  const removeBackground = () => {\n    bgRef.current.style.backgroundImage = \"\";\n    setBackground(\"\");\n    bgRef.current.classList.remove(\"bgHandler\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: type2 ? \"flex images_input\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: !type2 ? \"min-h-[90px] relative flex items-center justify-center flex_center\" : \" \",\n      ref: bgRef,\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textRef,\n        maxLength: \"250\",\n        value: text,\n        placeholder: `What's on your mind, ${user.first_name}`,\n        onChange: e => setText(e.target.value),\n        className: `relative border-none resize-none p-[5px_15px] mb-[10px] w-[470px] ml-[1px] text-[24px] bg-primary text-primary-color min-h--[90px] overflow-y-visible post_input ${type2 ? \"relative block text-[15px] input2\" : \"\"}`,\n        style: {\n          paddingTop: `${background ? Math.abs(textRef.current.value.length * 0.1 - 30) : \"0\"}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !type2 ? \"relative flex justify-between p-[10px_15px] items-end post_emojis_wrap\" : \"\",\n      children: [picker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `absolute right-[-21.5rem] bottom-[-14rem] comment_emoji_picker z-50 ${type2 ? \"absolute right-[-21.5rem] top-[8rem] movepicker2\" : \"remove\"}`,\n        ref: emoji,\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: handleEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), !type2 && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../../../icons/colorful.png\",\n        className: \"w-[39px] cursor-pointer\",\n        alt: \"\",\n        onClick: () => {\n          setShowBgs(prev => !prev);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), !type2 && showBgs && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_backgrounds\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no_bg\",\n          onClick: () => {\n            removeBackground();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), postBackgrounds.map((bg, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bg,\n          alt: \"\",\n          onClick: () => {\n            backgroundHandler(i);\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `hover:invert-[80%] emoji_icon_large ${type2 ? \"translate-x-[-10px] moveleft\" : \"\"}`,\n        onClick: () => setPicker(prev => !prev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmojiPickerBackground, \"2jVDzeO+TqvzYJ/lY6plsaPv33Q=\");\n\n_c = EmojiPickerBackground;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmojiPickerBackground\");","map":{"version":3,"sources":["/Users/jeevanshibansal/Desktop/HackConnect/Frontend/src/components/createPostPopup/EmojiPickerBackground.js"],"names":["useEffect","useRef","useState","Picker","EmojiPickerBackground","text","user","setText","type2","background","setBackground","picker","setPicker","showBgs","setShowBgs","cursorPosition","setCursorPosition","textRef","bgRef","emoji","current","selectionEnd","handleEmoji","ref","focus","start","substring","selectionStart","end","newText","length","postBackgrounds","backgroundHandler","i","style","backgroundImage","classList","add","removeBackground","remove","first_name","e","target","value","paddingTop","Math","abs","prev","map","bg"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport Picker from \"emoji-picker-react\";\n// import useClickOutside from \"../../helpers/clickOutside\";\n\nexport default function EmojiPickerBackground({\n  text,\n  user,\n  setText,\n  type2,\n  background,\n  setBackground,\n}) {\n  const [picker, setPicker] = useState(false);\n  const [showBgs, setShowBgs] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState();\n  const textRef = useRef(null);\n  const bgRef = useRef(null);\n  const emoji = useRef(null);\n\n  \n\n  useEffect(() => {\n    textRef.current.selectionEnd = cursorPosition;\n  }, [cursorPosition]);\n\n  const handleEmoji = ({ emoji }) => {\n    const ref = textRef.current;\n    ref.focus();\n    const start = text.substring(0, ref.selectionStart);\n    const end = text.substring(ref.selectionStart);\n    const newText = start + emoji + end;\n    setText(newText);\n    setCursorPosition(start.length + emoji.length);\n  };\n\n  const postBackgrounds = [\n    \"../../../images/postBackgrounds/1.jpg\",\n    \"../../../images/postBackgrounds/2.jpg\",\n    \"../../../images/postBackgrounds/3.jpg\",\n    \"../../../images/postBackgrounds/4.jpg\",\n    \"../../../images/postBackgrounds/5.jpg\",\n    \"../../../images/postBackgrounds/6.jpg\",\n    \"../../../images/postBackgrounds/7.jpg\",\n    \"../../../images/postBackgrounds/8.jpg\",\n    \"../../../images/postBackgrounds/9.jpg\",\n  ];\n\n  const backgroundHandler = (i) => {\n    bgRef.current.style.backgroundImage = `url(${postBackgrounds[i]})`;\n    setBackground(postBackgrounds[i]);\n    bgRef.current.classList.add(\"bgHandler\");\n  };\n\n  const removeBackground = () => {\n    bgRef.current.style.backgroundImage = \"\";\n    setBackground(\"\");\n    bgRef.current.classList.remove(\"bgHandler\");\n  };\n\n  return (\n    <div className={type2 ? \"flex images_input\" : \"\"}>\n      <div\n        className={\n          !type2\n            ? \"min-h-[90px] relative flex items-center justify-center flex_center\"\n            : \" \"\n        }\n        ref={bgRef}\n      >\n        <textarea\n          ref={textRef}\n          maxLength=\"250\"\n          value={text}\n          placeholder={`What's on your mind, ${user.first_name}`}\n          onChange={(e) => setText(e.target.value)}\n          className={`relative border-none resize-none p-[5px_15px] mb-[10px] w-[470px] ml-[1px] text-[24px] bg-primary text-primary-color min-h--[90px] overflow-y-visible post_input ${\n            type2 ? \"relative block text-[15px] input2\" : \"\"\n          }`}\n          style={{\n            paddingTop: `${\n              background\n                ? Math.abs(textRef.current.value.length * 0.1 - 30)\n                : \"0\"\n            }%`,\n          }}\n        ></textarea>\n      </div>\n      <div\n        className={\n          !type2\n            ? \"relative flex justify-between p-[10px_15px] items-end post_emojis_wrap\"\n            : \"\"\n        }\n      >\n        {picker && (\n          <div\n            className={`absolute right-[-21.5rem] bottom-[-14rem] comment_emoji_picker z-50 ${\n              type2\n                ? \"absolute right-[-21.5rem] top-[8rem] movepicker2\"\n                : \"remove\"\n            }`}\n            ref={emoji}\n          >\n            <Picker onEmojiClick={handleEmoji} />\n          </div>\n        )}\n        {!type2 && (\n          <img\n            src=\"../../../icons/colorful.png\"\n            className=\"w-[39px] cursor-pointer\"\n            alt=\"\"\n            onClick={() => {\n              setShowBgs((prev) => !prev);\n            }}\n          />\n        )}\n        {!type2 && showBgs && (\n          <div className=\"post_backgrounds\">\n            <div\n              className=\"no_bg\"\n              onClick={() => {\n                removeBackground();\n              }}\n            ></div>\n            {postBackgrounds.map((bg, i) => (\n              <img\n                src={bg}\n                key={i}\n                alt=\"\"\n                onClick={() => {\n                  backgroundHandler(i);\n                }}\n              />\n            ))}\n          </div>\n        )}\n        <i\n          className={`hover:invert-[80%] emoji_icon_large ${\n            type2 ? \"translate-x-[-10px] moveleft\" : \"\"\n          }`}\n          onClick={() => setPicker((prev) => !prev)}\n        ></i>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}
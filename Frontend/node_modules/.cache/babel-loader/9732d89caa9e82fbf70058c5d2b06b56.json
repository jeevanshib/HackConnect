{"ast":null,"code":"import { Formik, Form } from \"formik\";\nimport { useState } from \"react\"; // import * as Yup from \"yup\";\n\nimport { Link } from \"react-router-dom\";\nimport LoginInput from \"../../components/inputs/loginInput\"; // import HashLoader from \"react-spinners/HashLoader\";\n// import axios from \"axios\";\n// import {useDispatch} from \"react-redux\";\n// import Cookies from \"js-cookie\";\n// import {useNavigate} from \"react-router-dom\";\n\nconst loginInfos = {\n  email: \"\",\n  password: \"\"\n}; // export default function LoginForm({setVisible}) {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const [login, setLogin] = useState(loginInfos);\n//   const { email, password } = login;\n//   const handleLoginChange = (e) => {\n//     const { name, value } = e.target;\n//     setLogin({...login, [name]: value})\n//   };\n//   const loginValidation = Yup.object({\n//     email: Yup.string().required(\"Email address is required.\").email(\"Must be a valid email.\"),\n//     password: Yup.string().required(\"Password is Required.\")\n//   })\n//   const [error,setError] = useState(\"\");\n//   // const [success,setSuccess] = useState(\"\");\n//   const [loading,setLoading] = useState(false);\n//   const loginSubmit = async() => {\n//       try {\n//         setLoading(true);\n//         const {data} = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/login`, {\n//           email,\n//           password,        \n//         });\n//         setError(\"\");\n//         // setSuccess(data.message);\n//         // const {message, ...rest} = data;\n//           dispatch({type:'LOGIN', payload:data});\n//           Cookies.set(\"user\", JSON.stringify(data));\n//           navigate(\"/\");\n//       } catch (error) {\n//         setLoading(false);\n//         // setSuccess(\"\");\n//         setError(error.response.data.message);\n//       }\n//   };\n//   return (\n//     <div className=\"h-[78vh] text-primary-color md:flex md:items-center md:max-w-[1000px] md:my-0 md:mx-auto md:py-0 md:px-[1rem]\">\n//           <div className=\"w-[300px] mx-auto my-0 md:flex md:flex-col md:w-[50%] md:mb-[25vh]\">\n//             <img src=\"../../icons/facebook.svg\" className=\"w-[400px] ml-[-1rem]\" alt=\"\" />\n//             <span className=\"text-[17px] md:text-[20px]\">\n//                 Use hackconnect to find your team for your hackathons and improve your technical skills.            </span>\n//           </div>\n//           <div className=\"text-center\">\n//             <div className=\"flex flex-col items-center gap-[1rem] bg-primary shadow-[0_1px_2px] shadow-shadow-1 p-[1rem] pb-[2rem] w-[350px] my-[1rem] mx-auto h-fit select-none rounded-[10px] md:w-[400px]\">\n//               <Formik \n//               enableReinitialize\n//               initialValues={{\n//                 email,\n//                 password,\n//               }}\n//               validationSchema={loginValidation}\n//               onSubmit = {() => {\n//                 loginSubmit();\n//               }}\n//               >\n//                 {(formik) => (\n//                   <Form>\n//                     <LoginInput type=\"text\" name=\"email\" placeholder=\"Email address or phone number\" onChange={handleLoginChange} />\n//                     <LoginInput type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleLoginChange} bottom />\n//                     <button type=\"submit\" className=\"w-[100%] h-[50px] text-[17px] font-bold blue-btn\">Log In</button>\n//                   </Form>\n//                 )}\n//               </Formik>\n//               <Link to=\"/reset\" className=\"text-blue-color cursor-pointer text-[14px] hover:underline\">Forgot Password?</Link>\n//               <HashLoader loading={loading} color=\"#534741\" size={30} />\n//               {error && <div className=\"text-[#b94a48]\">{error}</div>}\n//               <div className=\"w-[100%] h-[1px] bg-third\"></div>\n//               <button className=\"important blue-btn w-[70%] h-[50px] text-[17px] font-semibold mt-[1rem] bg-green-color\" onClick={() => setVisible(true)}>Create Account</button>\n//             </div>\n//             <Link to=\"/\" className=\"text-[15px]\"><b>Create A Page</b> for a Hackathons.</Link>\n//           </div>\n//         </div>\n//   )\n// }","map":{"version":3,"sources":["/Users/jeevanshibansal/Desktop/HackConnect/Frontend/src/components/login/LoginForm.js"],"names":["Formik","Form","useState","Link","LoginInput","loginInfos","email","password"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB,C,CACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,QAAQ,EAAC;AAFQ,CAAnB,C,CAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Formik, Form } from \"formik\";\nimport { useState } from \"react\";\n// import * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport LoginInput from \"../../components/inputs/loginInput\";\n// import HashLoader from \"react-spinners/HashLoader\";\n// import axios from \"axios\";\n// import {useDispatch} from \"react-redux\";\n// import Cookies from \"js-cookie\";\n// import {useNavigate} from \"react-router-dom\";\n\nconst loginInfos = {\n  email:\"\",\n  password:\"\",\n};\n\n// export default function LoginForm({setVisible}) {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const [login, setLogin] = useState(loginInfos);\n//   const { email, password } = login;\n\n//   const handleLoginChange = (e) => {\n//     const { name, value } = e.target;\n//     setLogin({...login, [name]: value})\n//   };\n\n//   const loginValidation = Yup.object({\n//     email: Yup.string().required(\"Email address is required.\").email(\"Must be a valid email.\"),\n//     password: Yup.string().required(\"Password is Required.\")\n//   })\n\n//   const [error,setError] = useState(\"\");\n//   // const [success,setSuccess] = useState(\"\");\n//   const [loading,setLoading] = useState(false);\n\n//   const loginSubmit = async() => {\n//       try {\n//         setLoading(true);\n//         const {data} = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/login`, {\n//           email,\n//           password,        \n//         });\n//         setError(\"\");\n//         // setSuccess(data.message);\n//         // const {message, ...rest} = data;\n//           dispatch({type:'LOGIN', payload:data});\n//           Cookies.set(\"user\", JSON.stringify(data));\n//           navigate(\"/\");\n//       } catch (error) {\n//         setLoading(false);\n//         // setSuccess(\"\");\n//         setError(error.response.data.message);\n//       }\n//   };\n\n//   return (\n//     <div className=\"h-[78vh] text-primary-color md:flex md:items-center md:max-w-[1000px] md:my-0 md:mx-auto md:py-0 md:px-[1rem]\">\n//           <div className=\"w-[300px] mx-auto my-0 md:flex md:flex-col md:w-[50%] md:mb-[25vh]\">\n//             <img src=\"../../icons/facebook.svg\" className=\"w-[400px] ml-[-1rem]\" alt=\"\" />\n//             <span className=\"text-[17px] md:text-[20px]\">\n//                 Use hackconnect to find your team for your hackathons and improve your technical skills.            </span>\n//           </div>\n//           <div className=\"text-center\">\n//             <div className=\"flex flex-col items-center gap-[1rem] bg-primary shadow-[0_1px_2px] shadow-shadow-1 p-[1rem] pb-[2rem] w-[350px] my-[1rem] mx-auto h-fit select-none rounded-[10px] md:w-[400px]\">\n//               <Formik \n//               enableReinitialize\n//               initialValues={{\n//                 email,\n//                 password,\n//               }}\n//               validationSchema={loginValidation}\n//               onSubmit = {() => {\n//                 loginSubmit();\n//               }}\n//               >\n//                 {(formik) => (\n//                   <Form>\n//                     <LoginInput type=\"text\" name=\"email\" placeholder=\"Email address or phone number\" onChange={handleLoginChange} />\n//                     <LoginInput type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleLoginChange} bottom />\n                    \n//                     <button type=\"submit\" className=\"w-[100%] h-[50px] text-[17px] font-bold blue-btn\">Log In</button>\n//                   </Form>\n//                 )}\n//               </Formik>\n//               <Link to=\"/reset\" className=\"text-blue-color cursor-pointer text-[14px] hover:underline\">Forgot Password?</Link>\n//               <HashLoader loading={loading} color=\"#534741\" size={30} />\n//               {error && <div className=\"text-[#b94a48]\">{error}</div>}\n//               <div className=\"w-[100%] h-[1px] bg-third\"></div>\n//               <button className=\"important blue-btn w-[70%] h-[50px] text-[17px] font-semibold mt-[1rem] bg-green-color\" onClick={() => setVisible(true)}>Create Account</button>\n//             </div>\n//             <Link to=\"/\" className=\"text-[15px]\"><b>Create A Page</b> for a Hackathons.</Link>\n//           </div>\n//         </div>\n//   )\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}